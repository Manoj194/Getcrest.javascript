{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\DEMO\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\DEMO\",\"filename\":\"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\DEMO\\\\wdio.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\DEMO\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.12:test":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.config = void 0;\nconst expect = require('chai').expect;\nconst config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  // WebdriverIO supports running e2e tests as well as unit and component tests.\n  runner: 'local',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // of the configuration file being run.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n  specs: ['./test/specs/**/*.js'],\n  // Patterns to exclude.\n  exclude: [\n    // 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 5,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    // maxInstances can get overwritten per capability. So if you have an in-house Selenium\n    // grid with only 5 firefox instances available you can make sure that not more than\n    // 5 instances get started at a time.\n    maxInstances: 5,\n    //\n    browserName: 'chrome',\n    acceptInsecureCerts: true\n    // If outputDir is provided WebdriverIO can capture driver session logs\n    // it is possible to configure which logTypes to include/exclude.\n    // excludeDriverLogs: ['*'], // pass '*' to exclude all driver session logs\n    // excludeDriverLogs: ['bugreport', 'server'],\n  }],\n\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 2,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: 'http://localhost',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  services: ['chromedriver'],\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried specfiles should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  // ...\n  reporters: [['allure', {\n    outputDir: 'allure-results',\n    disableWebdriverStepsReporting: true,\n    disableWebdriverScreenshotsReporting: false\n  }]],\n  // reporters: [\n  //     [video, {\n  //       saveAllVideos: false,       // If true, also saves videos for successful test cases\n  //       videoSlowdownMultiplier: 3, // Higher to get slower videos, lower for faster videos [Value 1-100]\n  //     }],\n  //     ['allure', {\n  //       outputDir: './_results_/allure-raw',\n  //       disableWebdriverStepsReporting: true,\n  //       disableWebdriverScreenshotsReporting: true,\n  //     }],\n  //   ],\n\n  //\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  },\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {String} cid      capability id (e.g 0-0)\n   * @param  {[type]} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {[type]} specs    specs to be run in the worker process\n   * @param  {[type]} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {[type]} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {String} cid      capability id (e.g 0-0)\n   * @param  {Number} exitCode 0 - success, 1 - fail\n   * @param  {[type]} specs    specs to be run in the worker process\n   * @param  {Number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {String} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {Object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {String} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {Object} suite suite details\n   */\n  beforeSuite: function (suite) {\n    global.expect = expect;\n  },\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  // beforeTest: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n  // },\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine only)\n   * @param {Object}  test             test object\n   * @param {Object}  context          scope object the test was executed with\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n   * @param {Any}     result.result    return object of test function\n   * @param {Number}  result.duration  duration of test\n   * @param {Boolean} result.passed    true if test has passed, otherwise false\n   * @param {Object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n   */\n  afterTest:\n  //function(test, context, { error, result, duration, passed, retries }) {\n  //         if (error) {\n  //           browser.takeScreenshot();\n  //         }\n  //  },\n  async function (step, scenario, {\n    error,\n    duration,\n    passed\n  }, context) {\n    if (error) {\n      await browser.takeScreenshot();\n    }\n  }\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {Object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {String} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {Number} result 0 - command success, 1 - command error\n   * @param {Object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {Number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {Object} exitCode 0 - success, 1 - fail\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n  /**\n  * Gets executed when a refresh happens.\n  * @param {String} oldSessionId session ID of the old session\n  * @param {String} newSessionId session ID of the new session\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n};\nexports.config = config;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["expect","require","config","runner","specs","exclude","maxInstances","capabilities","browserName","acceptInsecureCerts","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","services","framework","reporters","outputDir","disableWebdriverStepsReporting","disableWebdriverScreenshotsReporting","mochaOpts","ui","timeout","beforeSuite","suite","global","afterTest","step","scenario","error","duration","passed","context","browser","takeScreenshot"],"sourceRoot":"C:\\Users\\LENOVO\\Desktop\\DEMO\\","sources":["wdio.conf.js"],"sourcesContent":["const expect = require('chai').expect\nexport const config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    // WebdriverIO supports running e2e tests as well as unit and component tests.\n    runner: 'local',\n    \n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // of the configuration file being run.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n    // then the current working directory is where your `package.json` resides, so `wdio`\n    // will be called from there.\n    //\n    specs: [\n        './test/specs/**/*.js'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 5,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n    capabilities: [{\n    \n        // maxInstances can get overwritten per capability. So if you have an in-house Selenium\n        // grid with only 5 firefox instances available you can make sure that not more than\n        // 5 instances get started at a time.\n        maxInstances: 5,\n        //\n        browserName: 'chrome',\n        acceptInsecureCerts: true\n        // If outputDir is provided WebdriverIO can capture driver session logs\n        // it is possible to configure which logTypes to include/exclude.\n        // excludeDriverLogs: ['*'], // pass '*' to exclude all driver session logs\n        // excludeDriverLogs: ['bugreport', 'server'],\n    }],\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 2,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: 'http://localhost',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    services: ['chromedriver'],\n    \n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'mocha',\n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried specfiles should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    reporters: ['spec'],\n        // ...\n        reporters: [['allure', {\n            outputDir: 'allure-results',\n            disableWebdriverStepsReporting: true,\n            disableWebdriverScreenshotsReporting: false,\n        }]],\n        \n        // reporters: [\n        //     [video, {\n        //       saveAllVideos: false,       // If true, also saves videos for successful test cases\n        //       videoSlowdownMultiplier: 3, // Higher to get slower videos, lower for faster videos [Value 1-100]\n        //     }],\n        //     ['allure', {\n        //       outputDir: './_results_/allure-raw',\n        //       disableWebdriverStepsReporting: true,\n        //       disableWebdriverScreenshotsReporting: true,\n        //     }],\n        //   ],\n    \n    \n    //\n    // Options to be passed to Mocha.\n    // See the full list at http://mochajs.org/\n    mochaOpts: {\n        ui: 'bdd',\n        timeout: 60000\n    },\n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {String} cid      capability id (e.g 0-0)\n     * @param  {[type]} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {[type]} specs    specs to be run in the worker process\n     * @param  {[type]} args     object that will be merged with the main configuration once worker is initialized\n     * @param  {[type]} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just after a worker process has exited.\n     * @param  {String} cid      capability id (e.g 0-0)\n     * @param  {Number} exitCode 0 - success, 1 - fail\n     * @param  {[type]} specs    specs to be run in the worker process\n     * @param  {Number} retries  number of retries used\n     */\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {String} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {Object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {String} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Hook that gets executed before the suite starts\n     * @param {Object} suite suite details\n     */\n    beforeSuite: function (suite) {\n        global.expect = expect;\n    },\n    /**\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\n     */\n    // beforeTest: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n     * beforeEach in Mocha)\n     */\n    // beforeHook: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n     * afterEach in Mocha)\n     */\n    // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n    // },\n    /**\n     * Function to be executed after a test (in Mocha/Jasmine only)\n     * @param {Object}  test             test object\n     * @param {Object}  context          scope object the test was executed with\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n     * @param {Any}     result.result    return object of test function\n     * @param {Number}  result.duration  duration of test\n     * @param {Boolean} result.passed    true if test has passed, otherwise false\n     * @param {Object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n     */\n      afterTest: //function(test, context, { error, result, duration, passed, retries }) {\n    //         if (error) {\n    //           browser.takeScreenshot();\n    //         }\n    //  },\n    async function (step, scenario, { error, duration, passed }, context) {\n        if (error) {\n          await browser.takeScreenshot();\n        }\n      },\n\n\n    /**\n     * Hook that gets executed after the suite has ended\n     * @param {Object} suite suite details\n     */\n    // afterSuite: function (suite) {\n    // },\n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {String} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {Number} result 0 - command success, 1 - command error\n     * @param {Object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {Number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {Object} exitCode 0 - success, 1 - fail\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {String} oldSessionId session ID of the old session\n    * @param {String} newSessionId session ID of the new session\n    */\n    // onReload: function(oldSessionId, newSessionId) {\n    // }\n}\n"],"mappings":";;;;;;AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,MAAM,CAAC,CAACD,MAAM;AAC9B,MAAME,MAAM,GAAG;EAClB;EACA;EACA;EACA;EACA;EACAC,MAAM,EAAE,OAAO;EAEf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,KAAK,EAAE,CACH,sBAAsB,CACzB;EACD;EACAC,OAAO,EAAE;IACL;EAAA,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,CAAC;EACf;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,CAAC;IAEX;IACA;IACA;IACAD,YAAY,EAAE,CAAC;IACf;IACAE,WAAW,EAAE,QAAQ;IACrBC,mBAAmB,EAAE;IACrB;IACA;IACA;IACA;EACJ,CAAC,CAAC;;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAAC;EACP;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,kBAAkB;EAC3B;EACA;EACAC,cAAc,EAAE,KAAK;EACrB;EACA;EACA;EACAC,sBAAsB,EAAE,MAAM;EAC9B;EACA;EACAC,oBAAoB,EAAE,CAAC;EACvB;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,CAAC,cAAc,CAAC;EAE1B;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,OAAO;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAM,CAAC;EACf;EACAA,SAAS,EAAE,CAAC,CAAC,QAAQ,EAAE;IACnBC,SAAS,EAAE,gBAAgB;IAC3BC,8BAA8B,EAAE,IAAI;IACpCC,oCAAoC,EAAE;EAC1C,CAAC,CAAC,CAAC;EAEH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGJ;EACA;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KAAK;IACTC,OAAO,EAAE;EACb,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACIC,WAAW,EAAE,UAAUC,KAAK,EAAE;IAC1BC,MAAM,CAAC3B,MAAM,GAAGA,MAAM;EAC1B,CAAC;EACD;AACJ;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACM4B,SAAS;EAAE;EACb;EACA;EACA;EACA;EACA,gBAAgBC,IAAI,EAAEC,QAAQ,EAAE;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAO,CAAC,EAAEC,OAAO,EAAE;IAClE,IAAIH,KAAK,EAAE;MACT,MAAMI,OAAO,CAACC,cAAc,EAAE;IAChC;EACF;;EAGF;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;AACJ,CAAC;AAAA"}},"mtime":1674875741767},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\DEMO\\\\test\\\\specs\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\DEMO\",\"filename\":\"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\DEMO\\\\test\\\\specs\\\\TC_01.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\DEMO\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.12:test":{"value":{"code":"\"use strict\";\n\nconst fs = require('fs');\nconst {\n  url\n} = require('inspector');\nlet credentials = JSON.parse(fs.readFileSync(\"test/TestData/GetcrestTestData.json\"));\nconst GetcresttestCase = require(\"../pageobjects/Getcrestpage\");\ndescribe('test-01', async () => {\n  credentials.forEach(({\n    teamname,\n    killsvalue,\n    placepointvalue\n  }) => {\n    it('Gc', async () => {\n      await browser.url(\"http://localhost:3000/\");\n      await browser.maximizeWindow();\n      expect(await browser.getTitle(), \"error\").to.equal(\"React App\");\n      var Formtest = await await GetcresttestCase.FormtestLink;\n      expect(Formtest).to.exist;\n      Formtest.click();\n      await (await GetcresttestCase.TeamnameTextfield).setValue(teamname);\n      var NameoftheTeam = await (await GetcresttestCase.TeamnameTextfield).getAttribute(\"value\");\n      expect(NameoftheTeam).to.equal(\"tyss\");\n      await (await GetcresttestCase.KillsTextfield).setValue(killsvalue);\n      var CountofKills = await (await GetcresttestCase.KillsTextfield).getAttribute(\"value\");\n      console.log(CountofKills);\n      await (await GetcresttestCase.PlacepointTextfield).setValue(placepointvalue);\n      var CountofPlacepointvalue = await (await GetcresttestCase.PlacepointTextfield).getAttribute(\"value\");\n      console.log(CountofPlacepointvalue);\n      const totalvalue = await (await GetcresttestCase.TotalTextfield).getAttribute(\"value\");\n      expect(await totalvalue, \"error\").to.equal(\"9\");\n      var addbutton = await await GetcresttestCase.AddButton;\n      expect(addbutton).to.exist;\n      addbutton.click();\n      var downloadbutton = await await GetcresttestCase.DownloadButton;\n      expect(downloadbutton).to.exist;\n      downloadbutton.click();\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJmcyIsInJlcXVpcmUiLCJ1cmwiLCJjcmVkZW50aWFscyIsIkpTT04iLCJwYXJzZSIsInJlYWRGaWxlU3luYyIsIkdldGNyZXN0dGVzdENhc2UiLCJkZXNjcmliZSIsImZvckVhY2giLCJ0ZWFtbmFtZSIsImtpbGxzdmFsdWUiLCJwbGFjZXBvaW50dmFsdWUiLCJpdCIsImJyb3dzZXIiLCJtYXhpbWl6ZVdpbmRvdyIsImV4cGVjdCIsImdldFRpdGxlIiwidG8iLCJlcXVhbCIsIkZvcm10ZXN0IiwiRm9ybXRlc3RMaW5rIiwiZXhpc3QiLCJjbGljayIsIlRlYW1uYW1lVGV4dGZpZWxkIiwic2V0VmFsdWUiLCJOYW1lb2Z0aGVUZWFtIiwiZ2V0QXR0cmlidXRlIiwiS2lsbHNUZXh0ZmllbGQiLCJDb3VudG9mS2lsbHMiLCJjb25zb2xlIiwibG9nIiwiUGxhY2Vwb2ludFRleHRmaWVsZCIsIkNvdW50b2ZQbGFjZXBvaW50dmFsdWUiLCJ0b3RhbHZhbHVlIiwiVG90YWxUZXh0ZmllbGQiLCJhZGRidXR0b24iLCJBZGRCdXR0b24iLCJkb3dubG9hZGJ1dHRvbiIsIkRvd25sb2FkQnV0dG9uIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXExFTk9WT1xcRGVza3RvcFxcREVNT1xcdGVzdFxcc3BlY3NcXCIsInNvdXJjZXMiOlsiVENfMDEuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXHJcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKVxyXG5jb25zdCB7IHVybCB9ID0gcmVxdWlyZSgnaW5zcGVjdG9yJylcclxubGV0IGNyZWRlbnRpYWxzID0gSlNPTi5wYXJzZShmcy5yZWFkRmlsZVN5bmMoXCJ0ZXN0L1Rlc3REYXRhL0dldGNyZXN0VGVzdERhdGEuanNvblwiKSlcclxuY29uc3QgR2V0Y3Jlc3R0ZXN0Q2FzZSA9IHJlcXVpcmUoXCIuLi9wYWdlb2JqZWN0cy9HZXRjcmVzdHBhZ2VcIilcclxuZGVzY3JpYmUoJ3Rlc3QtMDEnLGFzeW5jKCk9PntcclxuICBjcmVkZW50aWFscy5mb3JFYWNoKCh7dGVhbW5hbWUsa2lsbHN2YWx1ZSxwbGFjZXBvaW50dmFsdWV9KSA9PiB7XHJcbiAgICBcclxuICAgIGl0KCdHYycsYXN5bmMoKT0+e1xyXG4gICAgICAgIGF3YWl0IGJyb3dzZXIudXJsKFwiaHR0cDovL2xvY2FsaG9zdDozMDAwL1wiKVxyXG4gICAgICAgIGF3YWl0IGJyb3dzZXIubWF4aW1pemVXaW5kb3coKVxyXG4gICAgICAgICBleHBlY3QoYXdhaXQgYnJvd3Nlci5nZXRUaXRsZSgpLFwiZXJyb3JcIikudG8uZXF1YWwoXCJSZWFjdCBBcHBcIilcclxuXHJcbiAgICAgICAgdmFyIEZvcm10ZXN0PWF3YWl0IChhd2FpdCBHZXRjcmVzdHRlc3RDYXNlLkZvcm10ZXN0TGluaylcclxuICAgICAgICBleHBlY3QoIEZvcm10ZXN0KS50by5leGlzdFxyXG4gICAgICAgIEZvcm10ZXN0LmNsaWNrKClcclxuXHJcbiAgICAgICAgYXdhaXQgKGF3YWl0IEdldGNyZXN0dGVzdENhc2UuVGVhbW5hbWVUZXh0ZmllbGQpLnNldFZhbHVlKHRlYW1uYW1lKVxyXG4gICAgICAgdmFyIE5hbWVvZnRoZVRlYW0gPWF3YWl0IChhd2FpdCBHZXRjcmVzdHRlc3RDYXNlLlRlYW1uYW1lVGV4dGZpZWxkKS5nZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiKVxyXG4gICAgICAgIGV4cGVjdChOYW1lb2Z0aGVUZWFtKS50by5lcXVhbChcInR5c3NcIilcclxuXHJcbiAgICAgICAgYXdhaXQgKGF3YWl0IEdldGNyZXN0dGVzdENhc2UuS2lsbHNUZXh0ZmllbGQpLnNldFZhbHVlKGtpbGxzdmFsdWUpXHJcbiAgICAgICAgdmFyIENvdW50b2ZLaWxscz1hd2FpdCAoYXdhaXQgR2V0Y3Jlc3R0ZXN0Q2FzZS5LaWxsc1RleHRmaWVsZCkuZ2V0QXR0cmlidXRlKFwidmFsdWVcIilcclxuICAgICAgICBjb25zb2xlLmxvZyhDb3VudG9mS2lsbHMpO1xyXG5cclxuICAgICAgICBhd2FpdCAoYXdhaXQgR2V0Y3Jlc3R0ZXN0Q2FzZS5QbGFjZXBvaW50VGV4dGZpZWxkKS5zZXRWYWx1ZShwbGFjZXBvaW50dmFsdWUpXHJcbiAgICAgICAgdmFyIENvdW50b2ZQbGFjZXBvaW50dmFsdWU9YXdhaXQgKGF3YWl0IEdldGNyZXN0dGVzdENhc2UuUGxhY2Vwb2ludFRleHRmaWVsZCkuZ2V0QXR0cmlidXRlKFwidmFsdWVcIilcclxuICAgICAgICBjb25zb2xlLmxvZyhDb3VudG9mUGxhY2Vwb2ludHZhbHVlKTtcclxuXHJcbiAgICAgICAgY29uc3QgdG90YWx2YWx1ZT0gYXdhaXQgKGF3YWl0IEdldGNyZXN0dGVzdENhc2UuVG90YWxUZXh0ZmllbGQpLmdldEF0dHJpYnV0ZShcInZhbHVlXCIpXHJcbiAgICAgICAgZXhwZWN0KGF3YWl0IHRvdGFsdmFsdWUsXCJlcnJvclwiKS50by5lcXVhbChcIjlcIilcclxuXHJcbiAgICAgICAgdmFyIGFkZGJ1dHRvbj1hd2FpdCAoYXdhaXQgR2V0Y3Jlc3R0ZXN0Q2FzZS5BZGRCdXR0b24pXHJcbiAgICAgICAgZXhwZWN0KGFkZGJ1dHRvbikudG8uZXhpc3RcclxuICAgICAgICBhZGRidXR0b24uY2xpY2soKVxyXG5cclxuICAgICAgICB2YXIgZG93bmxvYWRidXR0b249YXdhaXQgKGF3YWl0IEdldGNyZXN0dGVzdENhc2UuRG93bmxvYWRCdXR0b24pXHJcbiAgICAgICAgZXhwZWN0KGRvd25sb2FkYnV0dG9uKS50by5leGlzdFxyXG4gICAgICAgIGRvd25sb2FkYnV0dG9uLmNsaWNrKClcclxuXHJcbiAgICBcclxuICAgIH0pXHJcbiAgfSlcclxuICAgIH0pXHJcbiAgXHJcbiJdLCJtYXBwaW5ncyI6Ijs7QUFDQSxNQUFNQSxFQUFFLEdBQUdDLE9BQU8sQ0FBQyxJQUFJLENBQUM7QUFDeEIsTUFBTTtFQUFFQztBQUFJLENBQUMsR0FBR0QsT0FBTyxDQUFDLFdBQVcsQ0FBQztBQUNwQyxJQUFJRSxXQUFXLEdBQUdDLElBQUksQ0FBQ0MsS0FBSyxDQUFDTCxFQUFFLENBQUNNLFlBQVksQ0FBQyxxQ0FBcUMsQ0FBQyxDQUFDO0FBQ3BGLE1BQU1DLGdCQUFnQixHQUFHTixPQUFPLENBQUMsNkJBQTZCLENBQUM7QUFDL0RPLFFBQVEsQ0FBQyxTQUFTLEVBQUMsWUFBUztFQUMxQkwsV0FBVyxDQUFDTSxPQUFPLENBQUMsQ0FBQztJQUFDQyxRQUFRO0lBQUNDLFVBQVU7SUFBQ0M7RUFBZSxDQUFDLEtBQUs7SUFFN0RDLEVBQUUsQ0FBQyxJQUFJLEVBQUMsWUFBUztNQUNiLE1BQU1DLE9BQU8sQ0FBQ1osR0FBRyxDQUFDLHdCQUF3QixDQUFDO01BQzNDLE1BQU1ZLE9BQU8sQ0FBQ0MsY0FBYyxFQUFFO01BQzdCQyxNQUFNLENBQUMsTUFBTUYsT0FBTyxDQUFDRyxRQUFRLEVBQUUsRUFBQyxPQUFPLENBQUMsQ0FBQ0MsRUFBRSxDQUFDQyxLQUFLLENBQUMsV0FBVyxDQUFDO01BRS9ELElBQUlDLFFBQVEsR0FBQyxNQUFPLE1BQU1iLGdCQUFnQixDQUFDYyxZQUFhO01BQ3hETCxNQUFNLENBQUVJLFFBQVEsQ0FBQyxDQUFDRixFQUFFLENBQUNJLEtBQUs7TUFDMUJGLFFBQVEsQ0FBQ0csS0FBSyxFQUFFO01BRWhCLE1BQU0sQ0FBQyxNQUFNaEIsZ0JBQWdCLENBQUNpQixpQkFBaUIsRUFBRUMsUUFBUSxDQUFDZixRQUFRLENBQUM7TUFDcEUsSUFBSWdCLGFBQWEsR0FBRSxNQUFNLENBQUMsTUFBTW5CLGdCQUFnQixDQUFDaUIsaUJBQWlCLEVBQUVHLFlBQVksQ0FBQyxPQUFPLENBQUM7TUFDeEZYLE1BQU0sQ0FBQ1UsYUFBYSxDQUFDLENBQUNSLEVBQUUsQ0FBQ0MsS0FBSyxDQUFDLE1BQU0sQ0FBQztNQUV0QyxNQUFNLENBQUMsTUFBTVosZ0JBQWdCLENBQUNxQixjQUFjLEVBQUVILFFBQVEsQ0FBQ2QsVUFBVSxDQUFDO01BQ2xFLElBQUlrQixZQUFZLEdBQUMsTUFBTSxDQUFDLE1BQU10QixnQkFBZ0IsQ0FBQ3FCLGNBQWMsRUFBRUQsWUFBWSxDQUFDLE9BQU8sQ0FBQztNQUNwRkcsT0FBTyxDQUFDQyxHQUFHLENBQUNGLFlBQVksQ0FBQztNQUV6QixNQUFNLENBQUMsTUFBTXRCLGdCQUFnQixDQUFDeUIsbUJBQW1CLEVBQUVQLFFBQVEsQ0FBQ2IsZUFBZSxDQUFDO01BQzVFLElBQUlxQixzQkFBc0IsR0FBQyxNQUFNLENBQUMsTUFBTTFCLGdCQUFnQixDQUFDeUIsbUJBQW1CLEVBQUVMLFlBQVksQ0FBQyxPQUFPLENBQUM7TUFDbkdHLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDRSxzQkFBc0IsQ0FBQztNQUVuQyxNQUFNQyxVQUFVLEdBQUUsTUFBTSxDQUFDLE1BQU0zQixnQkFBZ0IsQ0FBQzRCLGNBQWMsRUFBRVIsWUFBWSxDQUFDLE9BQU8sQ0FBQztNQUNyRlgsTUFBTSxDQUFDLE1BQU1rQixVQUFVLEVBQUMsT0FBTyxDQUFDLENBQUNoQixFQUFFLENBQUNDLEtBQUssQ0FBQyxHQUFHLENBQUM7TUFFOUMsSUFBSWlCLFNBQVMsR0FBQyxNQUFPLE1BQU03QixnQkFBZ0IsQ0FBQzhCLFNBQVU7TUFDdERyQixNQUFNLENBQUNvQixTQUFTLENBQUMsQ0FBQ2xCLEVBQUUsQ0FBQ0ksS0FBSztNQUMxQmMsU0FBUyxDQUFDYixLQUFLLEVBQUU7TUFFakIsSUFBSWUsY0FBYyxHQUFDLE1BQU8sTUFBTS9CLGdCQUFnQixDQUFDZ0MsY0FBZTtNQUNoRXZCLE1BQU0sQ0FBQ3NCLGNBQWMsQ0FBQyxDQUFDcEIsRUFBRSxDQUFDSSxLQUFLO01BQy9CZ0IsY0FBYyxDQUFDZixLQUFLLEVBQUU7SUFHMUIsQ0FBQyxDQUFDO0VBQ0osQ0FBQyxDQUFDO0FBQ0EsQ0FBQyxDQUFDIn0=","map":{"version":3,"names":["fs","require","url","credentials","JSON","parse","readFileSync","GetcresttestCase","describe","forEach","teamname","killsvalue","placepointvalue","it","browser","maximizeWindow","expect","getTitle","to","equal","Formtest","FormtestLink","exist","click","TeamnameTextfield","setValue","NameoftheTeam","getAttribute","KillsTextfield","CountofKills","console","log","PlacepointTextfield","CountofPlacepointvalue","totalvalue","TotalTextfield","addbutton","AddButton","downloadbutton","DownloadButton"],"sourceRoot":"C:\\Users\\LENOVO\\Desktop\\DEMO\\test\\specs\\","sources":["TC_01.js"],"sourcesContent":["\r\nconst fs = require('fs')\r\nconst { url } = require('inspector')\r\nlet credentials = JSON.parse(fs.readFileSync(\"test/TestData/GetcrestTestData.json\"))\r\nconst GetcresttestCase = require(\"../pageobjects/Getcrestpage\")\r\ndescribe('test-01',async()=>{\r\n  credentials.forEach(({teamname,killsvalue,placepointvalue}) => {\r\n    \r\n    it('Gc',async()=>{\r\n        await browser.url(\"http://localhost:3000/\")\r\n        await browser.maximizeWindow()\r\n         expect(await browser.getTitle(),\"error\").to.equal(\"React App\")\r\n\r\n        var Formtest=await (await GetcresttestCase.FormtestLink)\r\n        expect( Formtest).to.exist\r\n        Formtest.click()\r\n\r\n        await (await GetcresttestCase.TeamnameTextfield).setValue(teamname)\r\n       var NameoftheTeam =await (await GetcresttestCase.TeamnameTextfield).getAttribute(\"value\")\r\n        expect(NameoftheTeam).to.equal(\"tyss\")\r\n\r\n        await (await GetcresttestCase.KillsTextfield).setValue(killsvalue)\r\n        var CountofKills=await (await GetcresttestCase.KillsTextfield).getAttribute(\"value\")\r\n        console.log(CountofKills);\r\n\r\n        await (await GetcresttestCase.PlacepointTextfield).setValue(placepointvalue)\r\n        var CountofPlacepointvalue=await (await GetcresttestCase.PlacepointTextfield).getAttribute(\"value\")\r\n        console.log(CountofPlacepointvalue);\r\n\r\n        const totalvalue= await (await GetcresttestCase.TotalTextfield).getAttribute(\"value\")\r\n        expect(await totalvalue,\"error\").to.equal(\"9\")\r\n\r\n        var addbutton=await (await GetcresttestCase.AddButton)\r\n        expect(addbutton).to.exist\r\n        addbutton.click()\r\n\r\n        var downloadbutton=await (await GetcresttestCase.DownloadButton)\r\n        expect(downloadbutton).to.exist\r\n        downloadbutton.click()\r\n\r\n    \r\n    })\r\n  })\r\n    })\r\n  \r\n"],"mappings":";;AACA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AACxB,MAAM;EAAEC;AAAI,CAAC,GAAGD,OAAO,CAAC,WAAW,CAAC;AACpC,IAAIE,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACL,EAAE,CAACM,YAAY,CAAC,qCAAqC,CAAC,CAAC;AACpF,MAAMC,gBAAgB,GAAGN,OAAO,CAAC,6BAA6B,CAAC;AAC/DO,QAAQ,CAAC,SAAS,EAAC,YAAS;EAC1BL,WAAW,CAACM,OAAO,CAAC,CAAC;IAACC,QAAQ;IAACC,UAAU;IAACC;EAAe,CAAC,KAAK;IAE7DC,EAAE,CAAC,IAAI,EAAC,YAAS;MACb,MAAMC,OAAO,CAACZ,GAAG,CAAC,wBAAwB,CAAC;MAC3C,MAAMY,OAAO,CAACC,cAAc,EAAE;MAC7BC,MAAM,CAAC,MAAMF,OAAO,CAACG,QAAQ,EAAE,EAAC,OAAO,CAAC,CAACC,EAAE,CAACC,KAAK,CAAC,WAAW,CAAC;MAE/D,IAAIC,QAAQ,GAAC,MAAO,MAAMb,gBAAgB,CAACc,YAAa;MACxDL,MAAM,CAAEI,QAAQ,CAAC,CAACF,EAAE,CAACI,KAAK;MAC1BF,QAAQ,CAACG,KAAK,EAAE;MAEhB,MAAM,CAAC,MAAMhB,gBAAgB,CAACiB,iBAAiB,EAAEC,QAAQ,CAACf,QAAQ,CAAC;MACpE,IAAIgB,aAAa,GAAE,MAAM,CAAC,MAAMnB,gBAAgB,CAACiB,iBAAiB,EAAEG,YAAY,CAAC,OAAO,CAAC;MACxFX,MAAM,CAACU,aAAa,CAAC,CAACR,EAAE,CAACC,KAAK,CAAC,MAAM,CAAC;MAEtC,MAAM,CAAC,MAAMZ,gBAAgB,CAACqB,cAAc,EAAEH,QAAQ,CAACd,UAAU,CAAC;MAClE,IAAIkB,YAAY,GAAC,MAAM,CAAC,MAAMtB,gBAAgB,CAACqB,cAAc,EAAED,YAAY,CAAC,OAAO,CAAC;MACpFG,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;MAEzB,MAAM,CAAC,MAAMtB,gBAAgB,CAACyB,mBAAmB,EAAEP,QAAQ,CAACb,eAAe,CAAC;MAC5E,IAAIqB,sBAAsB,GAAC,MAAM,CAAC,MAAM1B,gBAAgB,CAACyB,mBAAmB,EAAEL,YAAY,CAAC,OAAO,CAAC;MACnGG,OAAO,CAACC,GAAG,CAACE,sBAAsB,CAAC;MAEnC,MAAMC,UAAU,GAAE,MAAM,CAAC,MAAM3B,gBAAgB,CAAC4B,cAAc,EAAER,YAAY,CAAC,OAAO,CAAC;MACrFX,MAAM,CAAC,MAAMkB,UAAU,EAAC,OAAO,CAAC,CAAChB,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC;MAE9C,IAAIiB,SAAS,GAAC,MAAO,MAAM7B,gBAAgB,CAAC8B,SAAU;MACtDrB,MAAM,CAACoB,SAAS,CAAC,CAAClB,EAAE,CAACI,KAAK;MAC1Bc,SAAS,CAACb,KAAK,EAAE;MAEjB,IAAIe,cAAc,GAAC,MAAO,MAAM/B,gBAAgB,CAACgC,cAAe;MAChEvB,MAAM,CAACsB,cAAc,CAAC,CAACpB,EAAE,CAACI,KAAK;MAC/BgB,cAAc,CAACf,KAAK,EAAE;IAG1B,CAAC,CAAC;EACJ,CAAC,CAAC;AACA,CAAC,CAAC"}},"mtime":1674888802407},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\DEMO\\\\test\\\\pageobjects\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\DEMO\",\"filename\":\"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\DEMO\\\\test\\\\pageobjects\\\\Getcrestpage.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\DEMO\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.12:test":{"value":{"code":"\"use strict\";\n\nclass Getcrest {\n  get FormtestLink() {\n    return $(\"//li[text()='Form Tests']\");\n  }\n  get TeamnameTextfield() {\n    return $(\"//input[@name='teamName']\");\n  }\n  get KillsTextfield() {\n    return $(\"//input[@placeholder='kills']\");\n  }\n  get PlacepointTextfield() {\n    return $(\"//input[@name='placePoints']\");\n  }\n  get TotalTextfield() {\n    return $(\"//input[@name='total']\");\n  }\n  get AddButton() {\n    return $(\"//button[@name='Back']\");\n  }\n  get DownloadButton() {\n    return $(\"//button[text()='download']\");\n  }\n}\nmodule.exports = new Getcrest();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJHZXRjcmVzdCIsIkZvcm10ZXN0TGluayIsIiQiLCJUZWFtbmFtZVRleHRmaWVsZCIsIktpbGxzVGV4dGZpZWxkIiwiUGxhY2Vwb2ludFRleHRmaWVsZCIsIlRvdGFsVGV4dGZpZWxkIiwiQWRkQnV0dG9uIiwiRG93bmxvYWRCdXR0b24iLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXExFTk9WT1xcRGVza3RvcFxcREVNT1xcdGVzdFxccGFnZW9iamVjdHNcXCIsInNvdXJjZXMiOlsiR2V0Y3Jlc3RwYWdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIEdldGNyZXN0XHJcbntcclxuXHJcbiAgICBnZXQgRm9ybXRlc3RMaW5rKCl7XHJcbiAgICAgICAgcmV0dXJuICQoXCIvL2xpW3RleHQoKT0nRm9ybSBUZXN0cyddXCIpXHJcbiAgICB9XHJcbiAgICBcclxuICAgIGdldCBUZWFtbmFtZVRleHRmaWVsZCgpe1xyXG4gICAgICAgIHJldHVybiAkKFwiLy9pbnB1dFtAbmFtZT0ndGVhbU5hbWUnXVwiKVxyXG5cclxuICAgIH1cclxuXHJcbiAgICBnZXQgS2lsbHNUZXh0ZmllbGQoKXtcclxuICAgICAgICByZXR1cm4gJChcIi8vaW5wdXRbQHBsYWNlaG9sZGVyPSdraWxscyddXCIpXHJcbiAgICB9XHJcbiAgICBnZXQgUGxhY2Vwb2ludFRleHRmaWVsZCgpe1xyXG4gICAgICAgIHJldHVybiAkKFwiLy9pbnB1dFtAbmFtZT0ncGxhY2VQb2ludHMnXVwiKVxyXG4gICAgfVxyXG5cclxuICAgIGdldCBUb3RhbFRleHRmaWVsZCgpe1xyXG4gICAgICAgIHJldHVybiAkKFwiLy9pbnB1dFtAbmFtZT0ndG90YWwnXVwiKVxyXG4gICAgfVxyXG5cclxuICAgIGdldCBBZGRCdXR0b24oKXtcclxuICAgICAgICByZXR1cm4gJChcIi8vYnV0dG9uW0BuYW1lPSdCYWNrJ11cIilcclxuICAgIH1cclxuXHJcbiAgICBnZXQgRG93bmxvYWRCdXR0b24oKXtcclxuICAgICAgICByZXR1cm4gJChcIi8vYnV0dG9uW3RleHQoKT0nZG93bmxvYWQnXVwiKVxyXG4gICAgfVxyXG5cclxuICBcclxuXHJcblxyXG59XHJcbm1vZHVsZS5leHBvcnRzPW5ldyBHZXRjcmVzdCgpO1xyXG4iXSwibWFwcGluZ3MiOiI7O0FBQUEsTUFBTUEsUUFBUSxDQUNkO0VBRUksSUFBSUMsWUFBWSxHQUFFO0lBQ2QsT0FBT0MsQ0FBQyxDQUFDLDJCQUEyQixDQUFDO0VBQ3pDO0VBRUEsSUFBSUMsaUJBQWlCLEdBQUU7SUFDbkIsT0FBT0QsQ0FBQyxDQUFDLDJCQUEyQixDQUFDO0VBRXpDO0VBRUEsSUFBSUUsY0FBYyxHQUFFO0lBQ2hCLE9BQU9GLENBQUMsQ0FBQywrQkFBK0IsQ0FBQztFQUM3QztFQUNBLElBQUlHLG1CQUFtQixHQUFFO0lBQ3JCLE9BQU9ILENBQUMsQ0FBQyw4QkFBOEIsQ0FBQztFQUM1QztFQUVBLElBQUlJLGNBQWMsR0FBRTtJQUNoQixPQUFPSixDQUFDLENBQUMsd0JBQXdCLENBQUM7RUFDdEM7RUFFQSxJQUFJSyxTQUFTLEdBQUU7SUFDWCxPQUFPTCxDQUFDLENBQUMsd0JBQXdCLENBQUM7RUFDdEM7RUFFQSxJQUFJTSxjQUFjLEdBQUU7SUFDaEIsT0FBT04sQ0FBQyxDQUFDLDZCQUE2QixDQUFDO0VBQzNDO0FBS0o7QUFDQU8sTUFBTSxDQUFDQyxPQUFPLEdBQUMsSUFBSVYsUUFBUSxFQUFFIn0=","map":{"version":3,"names":["Getcrest","FormtestLink","$","TeamnameTextfield","KillsTextfield","PlacepointTextfield","TotalTextfield","AddButton","DownloadButton","module","exports"],"sourceRoot":"C:\\Users\\LENOVO\\Desktop\\DEMO\\test\\pageobjects\\","sources":["Getcrestpage.js"],"sourcesContent":["class Getcrest\r\n{\r\n\r\n    get FormtestLink(){\r\n        return $(\"//li[text()='Form Tests']\")\r\n    }\r\n    \r\n    get TeamnameTextfield(){\r\n        return $(\"//input[@name='teamName']\")\r\n\r\n    }\r\n\r\n    get KillsTextfield(){\r\n        return $(\"//input[@placeholder='kills']\")\r\n    }\r\n    get PlacepointTextfield(){\r\n        return $(\"//input[@name='placePoints']\")\r\n    }\r\n\r\n    get TotalTextfield(){\r\n        return $(\"//input[@name='total']\")\r\n    }\r\n\r\n    get AddButton(){\r\n        return $(\"//button[@name='Back']\")\r\n    }\r\n\r\n    get DownloadButton(){\r\n        return $(\"//button[text()='download']\")\r\n    }\r\n\r\n  \r\n\r\n\r\n}\r\nmodule.exports=new Getcrest();\r\n"],"mappings":";;AAAA,MAAMA,QAAQ,CACd;EAEI,IAAIC,YAAY,GAAE;IACd,OAAOC,CAAC,CAAC,2BAA2B,CAAC;EACzC;EAEA,IAAIC,iBAAiB,GAAE;IACnB,OAAOD,CAAC,CAAC,2BAA2B,CAAC;EAEzC;EAEA,IAAIE,cAAc,GAAE;IAChB,OAAOF,CAAC,CAAC,+BAA+B,CAAC;EAC7C;EACA,IAAIG,mBAAmB,GAAE;IACrB,OAAOH,CAAC,CAAC,8BAA8B,CAAC;EAC5C;EAEA,IAAII,cAAc,GAAE;IAChB,OAAOJ,CAAC,CAAC,wBAAwB,CAAC;EACtC;EAEA,IAAIK,SAAS,GAAE;IACX,OAAOL,CAAC,CAAC,wBAAwB,CAAC;EACtC;EAEA,IAAIM,cAAc,GAAE;IAChB,OAAON,CAAC,CAAC,6BAA6B,CAAC;EAC3C;AAKJ;AACAO,MAAM,CAACC,OAAO,GAAC,IAAIV,QAAQ,EAAE"}},"mtime":1674888767965},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\DEMO\\\\test\\\\pageobjects\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\DEMO\",\"filename\":\"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\DEMO\\\\test\\\\pageobjects\\\\Getcrestpage.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\DEMO\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.12:test":{"value":{"code":"\"use strict\";\n\nclass Getcrest {\n  get FormtestLink() {\n    return $(\"//li[text()='Form Tests']\");\n  }\n  get TeamnameTextfield() {\n    return $(\"//input[@name='teamName']\");\n  }\n  get KillsTextfield() {\n    return $(\"//input[@placeholder='kills']\");\n  }\n  get PlacepointTextfield() {\n    return $(\"//input[@name='placePoints']\");\n  }\n  get TotalTextfield() {\n    return $(\"//input[@name='total']\");\n  }\n  get AddButton() {\n    return $(\"//button[@name='Back']\");\n  }\n  get DownloadButton() {\n    return $(\"//button[text()='download']\");\n  }\n}\nmodule.exports = new Getcrest();\n//export default new Getcrest();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJHZXRjcmVzdCIsIkZvcm10ZXN0TGluayIsIiQiLCJUZWFtbmFtZVRleHRmaWVsZCIsIktpbGxzVGV4dGZpZWxkIiwiUGxhY2Vwb2ludFRleHRmaWVsZCIsIlRvdGFsVGV4dGZpZWxkIiwiQWRkQnV0dG9uIiwiRG93bmxvYWRCdXR0b24iLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXExFTk9WT1xcRGVza3RvcFxcREVNT1xcdGVzdFxccGFnZW9iamVjdHNcXCIsInNvdXJjZXMiOlsiR2V0Y3Jlc3RwYWdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIEdldGNyZXN0XHJcbntcclxuXHJcbiAgICBnZXQgRm9ybXRlc3RMaW5rKCl7XHJcbiAgICAgICAgcmV0dXJuICQoXCIvL2xpW3RleHQoKT0nRm9ybSBUZXN0cyddXCIpXHJcbiAgICB9XHJcbiAgICBcclxuICAgIGdldCBUZWFtbmFtZVRleHRmaWVsZCgpe1xyXG4gICAgICAgIHJldHVybiAkKFwiLy9pbnB1dFtAbmFtZT0ndGVhbU5hbWUnXVwiKVxyXG5cclxuICAgIH1cclxuXHJcbiAgICBnZXQgS2lsbHNUZXh0ZmllbGQoKXtcclxuICAgICAgICByZXR1cm4gJChcIi8vaW5wdXRbQHBsYWNlaG9sZGVyPSdraWxscyddXCIpXHJcbiAgICB9XHJcbiAgICBnZXQgUGxhY2Vwb2ludFRleHRmaWVsZCgpe1xyXG4gICAgICAgIHJldHVybiAkKFwiLy9pbnB1dFtAbmFtZT0ncGxhY2VQb2ludHMnXVwiKVxyXG4gICAgfVxyXG5cclxuICAgIGdldCBUb3RhbFRleHRmaWVsZCgpe1xyXG4gICAgICAgIHJldHVybiAkKFwiLy9pbnB1dFtAbmFtZT0ndG90YWwnXVwiKVxyXG4gICAgfVxyXG5cclxuICAgIGdldCBBZGRCdXR0b24oKXtcclxuICAgICAgICByZXR1cm4gJChcIi8vYnV0dG9uW0BuYW1lPSdCYWNrJ11cIilcclxuICAgIH1cclxuXHJcbiAgICBnZXQgRG93bmxvYWRCdXR0b24oKXtcclxuICAgICAgICByZXR1cm4gJChcIi8vYnV0dG9uW3RleHQoKT0nZG93bmxvYWQnXVwiKVxyXG4gICAgfVxyXG5cclxuICBcclxuXHJcblxyXG59XHJcbm1vZHVsZS5leHBvcnRzPW5ldyBHZXRjcmVzdCgpO1xyXG4vL2V4cG9ydCBkZWZhdWx0IG5ldyBHZXRjcmVzdCgpOyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNQSxRQUFRLENBQ2Q7RUFFSSxJQUFJQyxZQUFZLEdBQUU7SUFDZCxPQUFPQyxDQUFDLENBQUMsMkJBQTJCLENBQUM7RUFDekM7RUFFQSxJQUFJQyxpQkFBaUIsR0FBRTtJQUNuQixPQUFPRCxDQUFDLENBQUMsMkJBQTJCLENBQUM7RUFFekM7RUFFQSxJQUFJRSxjQUFjLEdBQUU7SUFDaEIsT0FBT0YsQ0FBQyxDQUFDLCtCQUErQixDQUFDO0VBQzdDO0VBQ0EsSUFBSUcsbUJBQW1CLEdBQUU7SUFDckIsT0FBT0gsQ0FBQyxDQUFDLDhCQUE4QixDQUFDO0VBQzVDO0VBRUEsSUFBSUksY0FBYyxHQUFFO0lBQ2hCLE9BQU9KLENBQUMsQ0FBQyx3QkFBd0IsQ0FBQztFQUN0QztFQUVBLElBQUlLLFNBQVMsR0FBRTtJQUNYLE9BQU9MLENBQUMsQ0FBQyx3QkFBd0IsQ0FBQztFQUN0QztFQUVBLElBQUlNLGNBQWMsR0FBRTtJQUNoQixPQUFPTixDQUFDLENBQUMsNkJBQTZCLENBQUM7RUFDM0M7QUFLSjtBQUNBTyxNQUFNLENBQUNDLE9BQU8sR0FBQyxJQUFJVixRQUFRLEVBQUU7QUFDN0IifQ==","map":{"version":3,"names":["Getcrest","FormtestLink","$","TeamnameTextfield","KillsTextfield","PlacepointTextfield","TotalTextfield","AddButton","DownloadButton","module","exports"],"sourceRoot":"C:\\Users\\LENOVO\\Desktop\\DEMO\\test\\pageobjects\\","sources":["Getcrestpage.js"],"sourcesContent":["class Getcrest\r\n{\r\n\r\n    get FormtestLink(){\r\n        return $(\"//li[text()='Form Tests']\")\r\n    }\r\n    \r\n    get TeamnameTextfield(){\r\n        return $(\"//input[@name='teamName']\")\r\n\r\n    }\r\n\r\n    get KillsTextfield(){\r\n        return $(\"//input[@placeholder='kills']\")\r\n    }\r\n    get PlacepointTextfield(){\r\n        return $(\"//input[@name='placePoints']\")\r\n    }\r\n\r\n    get TotalTextfield(){\r\n        return $(\"//input[@name='total']\")\r\n    }\r\n\r\n    get AddButton(){\r\n        return $(\"//button[@name='Back']\")\r\n    }\r\n\r\n    get DownloadButton(){\r\n        return $(\"//button[text()='download']\")\r\n    }\r\n\r\n  \r\n\r\n\r\n}\r\nmodule.exports=new Getcrest();\r\n//export default new Getcrest();"],"mappings":";;AAAA,MAAMA,QAAQ,CACd;EAEI,IAAIC,YAAY,GAAE;IACd,OAAOC,CAAC,CAAC,2BAA2B,CAAC;EACzC;EAEA,IAAIC,iBAAiB,GAAE;IACnB,OAAOD,CAAC,CAAC,2BAA2B,CAAC;EAEzC;EAEA,IAAIE,cAAc,GAAE;IAChB,OAAOF,CAAC,CAAC,+BAA+B,CAAC;EAC7C;EACA,IAAIG,mBAAmB,GAAE;IACrB,OAAOH,CAAC,CAAC,8BAA8B,CAAC;EAC5C;EAEA,IAAII,cAAc,GAAE;IAChB,OAAOJ,CAAC,CAAC,wBAAwB,CAAC;EACtC;EAEA,IAAIK,SAAS,GAAE;IACX,OAAOL,CAAC,CAAC,wBAAwB,CAAC;EACtC;EAEA,IAAIM,cAAc,GAAE;IAChB,OAAON,CAAC,CAAC,6BAA6B,CAAC;EAC3C;AAKJ;AACAO,MAAM,CAACC,OAAO,GAAC,IAAIV,QAAQ,EAAE;AAC7B"}},"mtime":1674887789388}}